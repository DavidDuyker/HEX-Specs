*, *::before, *::after {
    box-sizing: border-box;
}

* {
    margin: 0;
}
  
body {
    line-height: 1.2;
    -webkit-font-smoothing: antialiased;
}
  
img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}
  
input, button, textarea, select {
    font: inherit;
}
  
p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}
  
#root, #__next {
    isolation: isolate;
}

:root {
    --foreground: #000000;
    --background: #ffffff;
}

body {
    font-family: 'Inter', serif;
}

h1 {
    font-weight: 550;
    font-size: 11px;
    color: var(--figma-color-text);
}

h2 {
    font-weight: 550;
    font-size: 11px;
    color: var(--figma-color-text-secondary);
}

h3 {
    font-weight: 400;
    font-size: 11px;
    color: var(--figma-color-text-secondary);
}

p {
    font-size: 11px;
    color: var(--figma-color-text);
}

.hidden {
    display: none !important;
}

.disabled {
    color: var(--figma-color-text-disabled);
}

/* Button styling (all icon buttons) */

button {
    font-weight: 600;
    border: none;
    background-color: var(--figma-color-bg);
    color: var(--figma-color-icon);
    width: 24px;
    height: 24px;
    border-radius: 4px;
    overflow: hidden;
}

button:hover {
    background-color: var(--figma-color-bg-hover);
    color: var(--figma-color-icon-hover)
}

button.disabled {
    color: var(--figma-color-icon-disabled);
}

button.disabled:hover {
    color: var(--figma-color-icon-disabled);
    background: none;
}

.iconBox {
    width: 24px;
    height: 24px;
    padding: 2px;
}


/* Picker input */

input[type="color"] {
	appearance: none;
	border: none;
    border-radius: 4px;
	width: 14px;
	height: 14px;
    padding: 0;
}

input[type="color"]::-webkit-color-swatch-wrapper {
	padding: 0;
}

input[type="color"]::-webkit-color-swatch {
	border: none;
}

/* Section General layout */
.section {
    padding: 8px 0;
}

/* Header area */

.header {
    height: 40px;
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 8px 8px 8px 16px;
}

.header h1 {
    flex-grow: 1;
}

/* Information dashboard section */

.dashboard {
    padding: 0 8px 0 8px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    gap: 8px;
}

.dashboardCard {
    padding: 8px 8px;
    display: flex;
    flex-direction: row;
    align-items: stretch;
    justify-content: space-between;
    gap: 4px;
    background-color: var(--figma-color-bg-secondary);
    border-radius: 4px;
    width: 100%;
}

.cardPrimaryContent {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 4px;
}

.cardPrimaryContent p {
    font-size: 14px;
    color: var(--figma-color-text-tertiary);
}

.cardSecondaryContent {
    display: flex;
    flex-direction: column;
    align-items: end;
    text-align: right;
}

.cardSecondaryContent>p {
    line-height: 1.2;
    max-width: 16ch;
}

.largeText, p.largeText {
    font-size: 18px;
    font-weight: 700;
    margin: 0;
    line-height: 22px;
    color: var(--figma-color-text);
}

/* Criteria icons */

.exampleText .yes, td .yes, .meetsCriteria .no {
    display: none;
}

.meetsCriteria .yes {
    display: inline-block;
}

/* Specific Cards */

/* Contrast Example Card */

.contrastCard {
    flex-grow: 1;
    flex-direction: column;
    background-color: var(--background);
    box-shadow: inset 0 0 0 1px hsla(0, 0%, 0%, 0.08);
    padding: 8px 8px 8px 8px;
}

.contrastCard p {
    color: var(--foreground);
    line-height: 1.1;
    display: inline-block;
    font-size: 14px;
}

.exampleText {
    display: flex;
    width: 100%;
    align-self: stretch;
    justify-content: space-between;
    align-items: center;
}

/* WCAG Card */

table{
    font-size: 11px;
    font-weight: 400;
    line-height: 12px;
    color: var(--figma-color-text);
    text-align: end;
    padding: 0;
    height: 39px;
    display: block;
}

table * {
    padding: 0;
    margin: 0;
}

table th {
    font-weight: 400;
    color: var(--figma-color-text-secondary);
    padding-left: 16px;
}

td p.no {
    color: var(--figma-color-text-danger);
}
td p.yes {
    color: var(--figma-color-text-success)
}

/* Interactive Picker things */

/* temporary */
#pickers {
    margin: 0;
}

.picker {
    width: 100%;
}

#pickers .header {
    height: 32px;
    padding: 0 16px;
}

.pickSelector {
    padding: 4px 8px 4px 16px;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 8px;
}

.pickSelector svg {
    background: none;
    color: transparent;
}

.color {
    background-color: var(--figma-color-bg);
    padding: 4px 5px;
    flex-grow: 1;
    border: 1px solid var(--figma-color-border);
    border-radius: 8px;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 8px;
}

.spot {
    background-color: var(--foreground);
    border: 1px solid hsla(0, 0%, 0%, 0.16);
    width: 14px;
    height: 14px;
    border-radius:4px;
    overflow: hidden;
}

#background .spot {
    background-color: var(--background);
}

.colorName {
    color: var(--figma-color-text);
    flex-grow: 1;
}

.colorHex input {
    border: none;
    background: none;
    color: var(--figma-color-text-secondary);
    text-align: end;
}

.colorHex {
    color: var(--figma-color-text-secondary);
    font-size: 11px;
    display: flex;
    align-items: center;
}

/* Active and Hover states */

.active .pickSelector {
    background-color: var(--figma-color-bg-selected);
}

.active .pickSelector svg {
    color: var(--figma-color-icon-selected);
}

.active .color {
    border-color: var(--figma-color-border-selected);
}

.pickSelector:hover {
    background-color: var(--figma-color-bg-hover);
}

.pickSelector:hover svg {
    color: var(--figma-color-icon-secondary);
}

.active .pickSelector:hover {
    background-color: var(--figma-color-bg-selected);
}

.active .pickSelector:hover svg {
    color: var(--figma-color-icon-selected);
}